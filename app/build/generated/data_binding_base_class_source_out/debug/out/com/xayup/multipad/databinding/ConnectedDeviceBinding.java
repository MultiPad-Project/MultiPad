// Generated by view binder compiler. Do not edit!
package com.xayup.multipad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.xayup.multipad.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConnectedDeviceBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout cdBackground;

  @NonNull
  public final Button connecteddeviceAccept;

  @NonNull
  public final ImageView connecteddeviceImageView1;

  @NonNull
  public final TextView connecteddeviceLaunchpadName;

  @NonNull
  public final TextView connecteddeviceVendor;

  private ConnectedDeviceBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout cdBackground, @NonNull Button connecteddeviceAccept,
      @NonNull ImageView connecteddeviceImageView1, @NonNull TextView connecteddeviceLaunchpadName,
      @NonNull TextView connecteddeviceVendor) {
    this.rootView = rootView;
    this.cdBackground = cdBackground;
    this.connecteddeviceAccept = connecteddeviceAccept;
    this.connecteddeviceImageView1 = connecteddeviceImageView1;
    this.connecteddeviceLaunchpadName = connecteddeviceLaunchpadName;
    this.connecteddeviceVendor = connecteddeviceVendor;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConnectedDeviceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConnectedDeviceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.connected_device, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConnectedDeviceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout cdBackground = (RelativeLayout) rootView;

      id = R.id.connecteddevice_accept;
      Button connecteddeviceAccept = ViewBindings.findChildViewById(rootView, id);
      if (connecteddeviceAccept == null) {
        break missingId;
      }

      id = R.id.connecteddeviceImageView1;
      ImageView connecteddeviceImageView1 = ViewBindings.findChildViewById(rootView, id);
      if (connecteddeviceImageView1 == null) {
        break missingId;
      }

      id = R.id.connecteddevice_launchpad_name;
      TextView connecteddeviceLaunchpadName = ViewBindings.findChildViewById(rootView, id);
      if (connecteddeviceLaunchpadName == null) {
        break missingId;
      }

      id = R.id.connecteddevice_vendor;
      TextView connecteddeviceVendor = ViewBindings.findChildViewById(rootView, id);
      if (connecteddeviceVendor == null) {
        break missingId;
      }

      return new ConnectedDeviceBinding((RelativeLayout) rootView, cdBackground,
          connecteddeviceAccept, connecteddeviceImageView1, connecteddeviceLaunchpadName,
          connecteddeviceVendor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
