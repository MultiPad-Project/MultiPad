// Generated by view binder compiler. Do not edit!
package com.xayup.multipad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.xayup.multipad.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UiImgSelectBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RelativeLayout alertExitBackgroundSelect;

  @NonNull
  public final TextView alertExitBackgroundSelectSubtitle;

  @NonNull
  public final TextView alertExitBackgroundSelectTitle;

  @NonNull
  public final RelativeLayout alertExitBtnSelect;

  @NonNull
  public final RelativeLayout alertExitChainSelect;

  @NonNull
  public final RelativeLayout alertExitLogoBgSelect;

  @NonNull
  public final RelativeLayout alertExitLogoSelect;

  @NonNull
  public final RelativeLayout alertExitPhantomCSelect;

  @NonNull
  public final RelativeLayout alertExitPhantomSelect;

  @NonNull
  public final TextView bntSelectSubtitle;

  @NonNull
  public final TextView btnSelectTitle;

  @NonNull
  public final TextView chainSelectSubtitle;

  @NonNull
  public final TextView chainSelectTitle;

  @NonNull
  public final LinearLayout exitSelectPads;

  @NonNull
  public final TextView logoBgSelectSubtitle;

  @NonNull
  public final TextView logoBgSelectTitle;

  @NonNull
  public final TextView logoSelectSubtitle;

  @NonNull
  public final TextView logoSelectTitle;

  @NonNull
  public final TextView phantomCSelectSubtitle;

  @NonNull
  public final TextView phantomCSelectTitle;

  @NonNull
  public final TextView phantomSelectSubtitle;

  @NonNull
  public final TextView phantomSelectTitle;

  @NonNull
  public final ScrollView uiImgSelect;

  private UiImgSelectBinding(@NonNull ScrollView rootView,
      @NonNull RelativeLayout alertExitBackgroundSelect,
      @NonNull TextView alertExitBackgroundSelectSubtitle,
      @NonNull TextView alertExitBackgroundSelectTitle, @NonNull RelativeLayout alertExitBtnSelect,
      @NonNull RelativeLayout alertExitChainSelect, @NonNull RelativeLayout alertExitLogoBgSelect,
      @NonNull RelativeLayout alertExitLogoSelect, @NonNull RelativeLayout alertExitPhantomCSelect,
      @NonNull RelativeLayout alertExitPhantomSelect, @NonNull TextView bntSelectSubtitle,
      @NonNull TextView btnSelectTitle, @NonNull TextView chainSelectSubtitle,
      @NonNull TextView chainSelectTitle, @NonNull LinearLayout exitSelectPads,
      @NonNull TextView logoBgSelectSubtitle, @NonNull TextView logoBgSelectTitle,
      @NonNull TextView logoSelectSubtitle, @NonNull TextView logoSelectTitle,
      @NonNull TextView phantomCSelectSubtitle, @NonNull TextView phantomCSelectTitle,
      @NonNull TextView phantomSelectSubtitle, @NonNull TextView phantomSelectTitle,
      @NonNull ScrollView uiImgSelect) {
    this.rootView = rootView;
    this.alertExitBackgroundSelect = alertExitBackgroundSelect;
    this.alertExitBackgroundSelectSubtitle = alertExitBackgroundSelectSubtitle;
    this.alertExitBackgroundSelectTitle = alertExitBackgroundSelectTitle;
    this.alertExitBtnSelect = alertExitBtnSelect;
    this.alertExitChainSelect = alertExitChainSelect;
    this.alertExitLogoBgSelect = alertExitLogoBgSelect;
    this.alertExitLogoSelect = alertExitLogoSelect;
    this.alertExitPhantomCSelect = alertExitPhantomCSelect;
    this.alertExitPhantomSelect = alertExitPhantomSelect;
    this.bntSelectSubtitle = bntSelectSubtitle;
    this.btnSelectTitle = btnSelectTitle;
    this.chainSelectSubtitle = chainSelectSubtitle;
    this.chainSelectTitle = chainSelectTitle;
    this.exitSelectPads = exitSelectPads;
    this.logoBgSelectSubtitle = logoBgSelectSubtitle;
    this.logoBgSelectTitle = logoBgSelectTitle;
    this.logoSelectSubtitle = logoSelectSubtitle;
    this.logoSelectTitle = logoSelectTitle;
    this.phantomCSelectSubtitle = phantomCSelectSubtitle;
    this.phantomCSelectTitle = phantomCSelectTitle;
    this.phantomSelectSubtitle = phantomSelectSubtitle;
    this.phantomSelectTitle = phantomSelectTitle;
    this.uiImgSelect = uiImgSelect;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static UiImgSelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UiImgSelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ui_img_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UiImgSelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alertExit_background_select;
      RelativeLayout alertExitBackgroundSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitBackgroundSelect == null) {
        break missingId;
      }

      id = R.id.alertExit_background_select_subtitle;
      TextView alertExitBackgroundSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (alertExitBackgroundSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.alertExit_background_select_title;
      TextView alertExitBackgroundSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (alertExitBackgroundSelectTitle == null) {
        break missingId;
      }

      id = R.id.alertExit_btn_select;
      RelativeLayout alertExitBtnSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitBtnSelect == null) {
        break missingId;
      }

      id = R.id.alertExit_chain_select;
      RelativeLayout alertExitChainSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitChainSelect == null) {
        break missingId;
      }

      id = R.id.alertExit_logo_bg_select;
      RelativeLayout alertExitLogoBgSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitLogoBgSelect == null) {
        break missingId;
      }

      id = R.id.alertExit_logo_select;
      RelativeLayout alertExitLogoSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitLogoSelect == null) {
        break missingId;
      }

      id = R.id.alertExit_phantomC_select;
      RelativeLayout alertExitPhantomCSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitPhantomCSelect == null) {
        break missingId;
      }

      id = R.id.alertExit_phantom_select;
      RelativeLayout alertExitPhantomSelect = ViewBindings.findChildViewById(rootView, id);
      if (alertExitPhantomSelect == null) {
        break missingId;
      }

      id = R.id.bnt_select_subtitle;
      TextView bntSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (bntSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.btn_select_title;
      TextView btnSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectTitle == null) {
        break missingId;
      }

      id = R.id.chain_select_subtitle;
      TextView chainSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (chainSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.chain_select_title;
      TextView chainSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (chainSelectTitle == null) {
        break missingId;
      }

      id = R.id.exit_select_pads;
      LinearLayout exitSelectPads = ViewBindings.findChildViewById(rootView, id);
      if (exitSelectPads == null) {
        break missingId;
      }

      id = R.id.logo_bg_select_subtitle;
      TextView logoBgSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (logoBgSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.logo_bg_select_title;
      TextView logoBgSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (logoBgSelectTitle == null) {
        break missingId;
      }

      id = R.id.logo_select_subtitle;
      TextView logoSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (logoSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.logo_select_title;
      TextView logoSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (logoSelectTitle == null) {
        break missingId;
      }

      id = R.id.phantomC_select_subtitle;
      TextView phantomCSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (phantomCSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.phantomC_select_title;
      TextView phantomCSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (phantomCSelectTitle == null) {
        break missingId;
      }

      id = R.id.phantom_select_subtitle;
      TextView phantomSelectSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (phantomSelectSubtitle == null) {
        break missingId;
      }

      id = R.id.phantom_select_title;
      TextView phantomSelectTitle = ViewBindings.findChildViewById(rootView, id);
      if (phantomSelectTitle == null) {
        break missingId;
      }

      ScrollView uiImgSelect = (ScrollView) rootView;

      return new UiImgSelectBinding((ScrollView) rootView, alertExitBackgroundSelect,
          alertExitBackgroundSelectSubtitle, alertExitBackgroundSelectTitle, alertExitBtnSelect,
          alertExitChainSelect, alertExitLogoBgSelect, alertExitLogoSelect, alertExitPhantomCSelect,
          alertExitPhantomSelect, bntSelectSubtitle, btnSelectTitle, chainSelectSubtitle,
          chainSelectTitle, exitSelectPads, logoBgSelectSubtitle, logoBgSelectTitle,
          logoSelectSubtitle, logoSelectTitle, phantomCSelectSubtitle, phantomCSelectTitle,
          phantomSelectSubtitle, phantomSelectTitle, uiImgSelect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
