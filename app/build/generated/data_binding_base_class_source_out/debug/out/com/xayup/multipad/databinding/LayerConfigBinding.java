// Generated by view binder compiler. Do not edit!
package com.xayup.multipad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.xayup.multipad.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayerConfigBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final RelativeLayout layerCfgBackground;

  @NonNull
  public final Button layerCfgChangecfgs;

  @NonNull
  public final EditText layerCfgEditSizeH;

  @NonNull
  public final EditText layerCfgEditSizeW;

  @NonNull
  public final Button layerCfgExit;

  @NonNull
  public final Button layerCfgSMinus;

  @NonNull
  public final Button layerCfgSPlus;

  @NonNull
  public final TextView layerCfgSize;

  @NonNull
  public final EditText padsCfgEditSize;

  @NonNull
  public final Button padsCfgSMinus;

  @NonNull
  public final Button padsCfgSPlus;

  @NonNull
  public final TextView padsCfgSize;

  private LayerConfigBinding(@NonNull View rootView, @NonNull RelativeLayout layerCfgBackground,
      @NonNull Button layerCfgChangecfgs, @NonNull EditText layerCfgEditSizeH,
      @NonNull EditText layerCfgEditSizeW, @NonNull Button layerCfgExit,
      @NonNull Button layerCfgSMinus, @NonNull Button layerCfgSPlus, @NonNull TextView layerCfgSize,
      @NonNull EditText padsCfgEditSize, @NonNull Button padsCfgSMinus,
      @NonNull Button padsCfgSPlus, @NonNull TextView padsCfgSize) {
    this.rootView = rootView;
    this.layerCfgBackground = layerCfgBackground;
    this.layerCfgChangecfgs = layerCfgChangecfgs;
    this.layerCfgEditSizeH = layerCfgEditSizeH;
    this.layerCfgEditSizeW = layerCfgEditSizeW;
    this.layerCfgExit = layerCfgExit;
    this.layerCfgSMinus = layerCfgSMinus;
    this.layerCfgSPlus = layerCfgSPlus;
    this.layerCfgSize = layerCfgSize;
    this.padsCfgEditSize = padsCfgEditSize;
    this.padsCfgSMinus = padsCfgSMinus;
    this.padsCfgSPlus = padsCfgSPlus;
    this.padsCfgSize = padsCfgSize;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static LayerConfigBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.layer_config, parent);
    return bind(parent);
  }

  @NonNull
  public static LayerConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layer_cfg_background;
      RelativeLayout layerCfgBackground = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgBackground == null) {
        break missingId;
      }

      id = R.id.layer_cfg_changecfgs;
      Button layerCfgChangecfgs = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgChangecfgs == null) {
        break missingId;
      }

      id = R.id.layer_cfg_edit_size_h;
      EditText layerCfgEditSizeH = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgEditSizeH == null) {
        break missingId;
      }

      id = R.id.layer_cfg_edit_size_w;
      EditText layerCfgEditSizeW = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgEditSizeW == null) {
        break missingId;
      }

      id = R.id.layer_cfg_exit;
      Button layerCfgExit = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgExit == null) {
        break missingId;
      }

      id = R.id.layer_cfg_s_minus;
      Button layerCfgSMinus = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgSMinus == null) {
        break missingId;
      }

      id = R.id.layer_cfg_s_plus;
      Button layerCfgSPlus = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgSPlus == null) {
        break missingId;
      }

      id = R.id.layer_cfg_size;
      TextView layerCfgSize = ViewBindings.findChildViewById(rootView, id);
      if (layerCfgSize == null) {
        break missingId;
      }

      id = R.id.pads_cfg_edit_size;
      EditText padsCfgEditSize = ViewBindings.findChildViewById(rootView, id);
      if (padsCfgEditSize == null) {
        break missingId;
      }

      id = R.id.pads_cfg_s_minus;
      Button padsCfgSMinus = ViewBindings.findChildViewById(rootView, id);
      if (padsCfgSMinus == null) {
        break missingId;
      }

      id = R.id.pads_cfg_s_plus;
      Button padsCfgSPlus = ViewBindings.findChildViewById(rootView, id);
      if (padsCfgSPlus == null) {
        break missingId;
      }

      id = R.id.pads_cfg_size;
      TextView padsCfgSize = ViewBindings.findChildViewById(rootView, id);
      if (padsCfgSize == null) {
        break missingId;
      }

      return new LayerConfigBinding(rootView, layerCfgBackground, layerCfgChangecfgs,
          layerCfgEditSizeH, layerCfgEditSizeW, layerCfgExit, layerCfgSMinus, layerCfgSPlus,
          layerCfgSize, padsCfgEditSize, padsCfgSMinus, padsCfgSPlus, padsCfgSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
