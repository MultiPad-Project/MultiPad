// Generated by view binder compiler. Do not edit!
package com.xayup.multipad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.xayup.multipad.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GlowConfigsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout glowCfgBackground;

  @NonNull
  public final Button glowCfgChangecfgs;

  @NonNull
  public final Button glowCfgExit;

  @NonNull
  public final Button glowCfgIMinus;

  @NonNull
  public final Button glowCfgIPlus;

  @NonNull
  public final Button glowCfgRMinus;

  @NonNull
  public final Button glowCfgRPlus;

  @NonNull
  public final Switch glowCfgSwitch;

  @NonNull
  public final RelativeLayout glowCfgWindow;

  @NonNull
  public final EditText glowConfigEditIntensidade;

  @NonNull
  public final EditText glowConfigEditRadius;

  @NonNull
  public final TextView glowConfigIntensidade;

  @NonNull
  public final TextView glowConfigRadius;

  @NonNull
  public final TextView textChain;

  @NonNull
  public final TextView textPad;

  private GlowConfigsBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout glowCfgBackground, @NonNull Button glowCfgChangecfgs,
      @NonNull Button glowCfgExit, @NonNull Button glowCfgIMinus, @NonNull Button glowCfgIPlus,
      @NonNull Button glowCfgRMinus, @NonNull Button glowCfgRPlus, @NonNull Switch glowCfgSwitch,
      @NonNull RelativeLayout glowCfgWindow, @NonNull EditText glowConfigEditIntensidade,
      @NonNull EditText glowConfigEditRadius, @NonNull TextView glowConfigIntensidade,
      @NonNull TextView glowConfigRadius, @NonNull TextView textChain, @NonNull TextView textPad) {
    this.rootView = rootView;
    this.glowCfgBackground = glowCfgBackground;
    this.glowCfgChangecfgs = glowCfgChangecfgs;
    this.glowCfgExit = glowCfgExit;
    this.glowCfgIMinus = glowCfgIMinus;
    this.glowCfgIPlus = glowCfgIPlus;
    this.glowCfgRMinus = glowCfgRMinus;
    this.glowCfgRPlus = glowCfgRPlus;
    this.glowCfgSwitch = glowCfgSwitch;
    this.glowCfgWindow = glowCfgWindow;
    this.glowConfigEditIntensidade = glowConfigEditIntensidade;
    this.glowConfigEditRadius = glowConfigEditRadius;
    this.glowConfigIntensidade = glowConfigIntensidade;
    this.glowConfigRadius = glowConfigRadius;
    this.textChain = textChain;
    this.textPad = textPad;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GlowConfigsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GlowConfigsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.glow_configs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GlowConfigsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.glow_cfg_background;
      RelativeLayout glowCfgBackground = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgBackground == null) {
        break missingId;
      }

      id = R.id.glow_cfg_changecfgs;
      Button glowCfgChangecfgs = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgChangecfgs == null) {
        break missingId;
      }

      id = R.id.glow_cfg_exit;
      Button glowCfgExit = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgExit == null) {
        break missingId;
      }

      id = R.id.glow_cfg_i_minus;
      Button glowCfgIMinus = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgIMinus == null) {
        break missingId;
      }

      id = R.id.glow_cfg_i_plus;
      Button glowCfgIPlus = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgIPlus == null) {
        break missingId;
      }

      id = R.id.glow_cfg_r_minus;
      Button glowCfgRMinus = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgRMinus == null) {
        break missingId;
      }

      id = R.id.glow_cfg_r_plus;
      Button glowCfgRPlus = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgRPlus == null) {
        break missingId;
      }

      id = R.id.glow_cfg_switch;
      Switch glowCfgSwitch = ViewBindings.findChildViewById(rootView, id);
      if (glowCfgSwitch == null) {
        break missingId;
      }

      RelativeLayout glowCfgWindow = (RelativeLayout) rootView;

      id = R.id.glow_config_edit_intensidade;
      EditText glowConfigEditIntensidade = ViewBindings.findChildViewById(rootView, id);
      if (glowConfigEditIntensidade == null) {
        break missingId;
      }

      id = R.id.glow_config_edit_radius;
      EditText glowConfigEditRadius = ViewBindings.findChildViewById(rootView, id);
      if (glowConfigEditRadius == null) {
        break missingId;
      }

      id = R.id.glow_config_intensidade;
      TextView glowConfigIntensidade = ViewBindings.findChildViewById(rootView, id);
      if (glowConfigIntensidade == null) {
        break missingId;
      }

      id = R.id.glow_config_radius;
      TextView glowConfigRadius = ViewBindings.findChildViewById(rootView, id);
      if (glowConfigRadius == null) {
        break missingId;
      }

      id = R.id.textChain;
      TextView textChain = ViewBindings.findChildViewById(rootView, id);
      if (textChain == null) {
        break missingId;
      }

      id = R.id.textPad;
      TextView textPad = ViewBindings.findChildViewById(rootView, id);
      if (textPad == null) {
        break missingId;
      }

      return new GlowConfigsBinding((RelativeLayout) rootView, glowCfgBackground, glowCfgChangecfgs,
          glowCfgExit, glowCfgIMinus, glowCfgIPlus, glowCfgRMinus, glowCfgRPlus, glowCfgSwitch,
          glowCfgWindow, glowConfigEditIntensidade, glowConfigEditRadius, glowConfigIntensidade,
          glowConfigRadius, textChain, textPad);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
